name: Release Plugin

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures tags are available

      - name: Set up variables
        id: vars
        run: |
          PLUGIN_FILE="azwp-mailer/azwp-mailer.php"
          VERSION=$(grep -oP 'Version:\s*\K[\d.]+' $PLUGIN_FILE)
          NAME=$(grep -oP 'Plugin Name:\s*\K.+' $PLUGIN_FILE)
          SHORT_DESC=$(grep -oP 'Description:\s*\K.+' $PLUGIN_FILE)
          TAG_VERSION="${GITHUB_REF##*/}"
          TAG_MESSAGE=$(git for-each-ref --format='%(contents)' refs/tags/${TAG_VERSION})

          # Combine the tag message + short description
          DESCRIPTION="${TAG_MESSAGE}\n\n${SHORT_DESC}"

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "NAME=$NAME" >> $GITHUB_ENV
          echo "DESCRIPTION<<EOF" >> $GITHUB_ENV
          echo "$DESCRIPTION" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Validate tag matches plugin version
        run: |
          TAG_VERSION="${GITHUB_REF##*/}"  # get tag name from ref
          if [ "$TAG_VERSION" != "v${VERSION}" ]; then
            echo "❌ Tag $TAG_VERSION doesn't match plugin version v${VERSION}"
            exit 1
          fi

      - name: Zip plugin
        run: |
          mkdir -p build
          zip -r build/azwp-mailer-${VERSION}.zip azwp-mailer

      - name: Generate JSON metadata
        run: |
          JSON_FILE="build/azwp-mailer-${VERSION}.json"
          DOWNLOAD_URL="https://github.com/arisdla/azwp-mailer/releases/download/v${VERSION}/azwp-mailer-${VERSION}.zip"

          cat > $JSON_FILE <<EOF
          {
            "name": "${NAME}",
            "version": "${VERSION}",
            "download_url": "$DOWNLOAD_URL",
            "sections": {
              "description": "${DESCRIPTION}"
            }
          }
          EOF

      - name: Copy and rename files for latest release
        run: |
          cp build/azwp-mailer-${VERSION}.zip build/azwp-mailer.zip
          cp build/azwp-mailer-${VERSION}.json build/azwp-mailer.json

      - name: Force update 'latest' tag to current commit
        run: |
          git tag -f latest
          git push -f origin latest

      - name: Upload versioned release zip
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          files: |
            build/azwp-mailer-${{ env.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to 'latest' release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: Latest
          files: |
            build/azwp-mailer.zip
            build/azwp-mailer.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload versioned release json
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          files: |
            build/azwp-mailer-${{ env.VERSION }}.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
